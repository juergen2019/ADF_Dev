{
	"name": "CustomerSCDType2",
	"properties": {
		"description": "This is a Mapping Data flow to populate a SCD Type 2 Table",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlCustomer",
						"type": "DatasetReference"
					},
					"name": "CustomerSource"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlDimCustomer",
						"type": "DatasetReference"
					},
					"name": "DimCustomer1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlDimCustomer",
						"type": "DatasetReference"
					},
					"name": "DimCustomerNew"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlDimCustomer",
						"type": "DatasetReference"
					},
					"name": "SinkInactive"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlDimCustomer",
						"type": "DatasetReference"
					},
					"name": "DimCustomerUpdates"
				}
			],
			"transformations": [
				{
					"name": "NormNames"
				},
				{
					"name": "NewRow"
				},
				{
					"name": "SetAttribute"
				},
				{
					"name": "CheckForChanges"
				},
				{
					"name": "SetAttributeInactive"
				},
				{
					"name": "SetAttributeUPD"
				},
				{
					"name": "NullFilter"
				},
				{
					"name": "LookupIDs"
				},
				{
					"name": "NormNames2"
				},
				{
					"name": "InactiveFields"
				},
				{
					"name": "AlterRow1"
				}
			],
			"script": "\n\nsource(output(\n\t\tCustomerID as integer,\n\t\tNameStyle as boolean,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tSuffix as string,\n\t\tCompanyName as string,\n\t\tSalesPerson as string,\n\t\tEmailAddress as string,\n\t\tPhone as string,\n\t\tPasswordHash as string,\n\t\tPasswordSalt as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> CustomerSource\nsource(output(\n\t\tCustomerID as integer,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tSuffix as string,\n\t\tCompanyName as string,\n\t\tSalesPerson as string,\n\t\tEmailAddress as string,\n\t\tHashKey as string,\n\t\tCurrentInd as string,\n\t\tEffDate as timestamp,\n\t\tExpDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> DimCustomer1\nLookupIDs select(mapColumn(\n\t\tCustomerID = CustomerSource@CustomerID,\n\t\tNameStyle,\n\t\tTitle = CustomerSource@Title,\n\t\tFirstName = CustomerSource@FirstName,\n\t\tMiddleName = CustomerSource@MiddleName,\n\t\tLastName = CustomerSource@LastName,\n\t\tSuffix = CustomerSource@Suffix,\n\t\tCompanyName = CustomerSource@CompanyName,\n\t\tSalesPerson = CustomerSource@SalesPerson,\n\t\tEmailAddress = CustomerSource@EmailAddress,\n\t\tUpdateDate = {CustomerSource@ModifiedDate},\n\t\tHashKey,\n\t\tCurrentInd\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> NormNames\nNormNames split(isNull(CurrentInd),\n\tdisjoint: false) ~> NewRow@(NewRow, CheckForUpdates)\nNewRow@NewRow derive(CurrentInd = toString('Y'),\n\t\tExpDate = toDate('9999'),\n\t\tEffDate = UpdateDate,\n\t\tHashKey = sha1(concat(toString(CustomerID),FirstName,LastName))) ~> SetAttribute\nNormNames2, DimCustomer1 exists(NormNames2@CustomerID == DimCustomer1@CustomerID,\n\tnegate:false,\n\tbroadcast: 'none')~> CheckForChanges\nCheckForChanges derive(CurrentInd = 'N',\n\t\tExpDate = currentTimestamp(),\n\t\tEffDate = UpdateDate) ~> SetAttributeInactive\nCheckForChanges derive(CurrentInd = 'Y') ~> SetAttributeUPD\nCustomerSource filter(!isNull(CustomerID)) ~> NullFilter\nNullFilter, DimCustomer1 lookup(CustomerSource@CustomerID == DimCustomer1@CustomerID,\n\tbroadcast: 'none')~> LookupIDs\nNewRow@CheckForUpdates select(mapColumn(\n\t\tCustomerID,\n\t\tNameStyle,\n\t\tTitle,\n\t\tFirstName,\n\t\tMiddleName,\n\t\tLastName,\n\t\tSuffix,\n\t\tCompanyName,\n\t\tSalesPerson,\n\t\tEmailAddress,\n\t\tUpdateDate,\n\t\tHashKey,\n\t\tCurrentInd\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> NormNames2\nSetAttributeInactive select(mapColumn(\n\t\tCustomerID,\n\t\tTitle,\n\t\tEmailAddress,\n\t\tUpdateDate,\n\t\tCurrentInd,\n\t\tExpDate,\n\t\tEffDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> InactiveFields\nInactiveFields alterRow(updateIf(true())) ~> AlterRow1\nSetAttribute sink(input(\n\t\tCustomerID as integer,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tSuffix as string,\n\t\tCompanyName as string,\n\t\tSalesPerson as string,\n\t\tEmailAddress as string,\n\t\tPasswordHash as string,\n\t\tPasswordSalt as string,\n\t\tModifiedDate as timestamp,\n\t\tInsertDate as timestamp,\n\t\tUpdateDate as timestamp,\n\t\tHashKey as string,\n\t\tCurrentInd as string,\n\t\tEffDate as timestamp,\n\t\tExpDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tbatchSize: 50,\n\tpartitionBy('roundRobin', 2)) ~> DimCustomerNew\nAlterRow1 sink(input(\n\t\tCustomerID as integer,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tSuffix as string,\n\t\tCompanyName as string,\n\t\tSalesPerson as string,\n\t\tEmailAddress as string,\n\t\tPasswordHash as string,\n\t\tPasswordSalt as string,\n\t\tModifiedDate as timestamp,\n\t\tInsertDate as timestamp,\n\t\tUpdateDate as timestamp,\n\t\tHashKey as string,\n\t\tCurrentInd as string,\n\t\tEffDate as timestamp,\n\t\tExpDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tformat: 'table',\n\tbatchSize: 50,\n\tkeys:['CustomerID','EffDate']) ~> SinkInactive\nSetAttributeUPD sink(input(\n\t\tCustomerID as integer,\n\t\tTitle as string,\n\t\tFirstName as string,\n\t\tMiddleName as string,\n\t\tLastName as string,\n\t\tSuffix as string,\n\t\tCompanyName as string,\n\t\tSalesPerson as string,\n\t\tEmailAddress as string,\n\t\tPasswordHash as string,\n\t\tPasswordSalt as string,\n\t\tModifiedDate as timestamp,\n\t\tInsertDate as timestamp,\n\t\tUpdateDate as timestamp,\n\t\tHashKey as string,\n\t\tCurrentInd as string,\n\t\tEffDate as timestamp,\n\t\tExpDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tbatchSize: 50) ~> DimCustomerUpdates"
		}
	}
}